# vim: ft=rifleconfig
#
# This is a configuration file for "rifleman"
# https://github.com/purarue/rifleman
#
# This is a modified version of rangers file launcher, rifle:
# https://github.com/ranger/ranger
#
# Each line consists of conditions and a command.  For each line the conditions
# are checked and if they are met, the respective command is run.
#
# Syntax:
#   <condition1> , <condition2> , ... = command
#
# $1 means each file which matches the conditional is executed as a single file
# $@ means all files which match a conditional are executed as multiple positional arguments
#
# i.e.
#   rifleman one.py two.py
#
# black "$1":
#   As two separate commands, runs:
#   black one.py
#   black two.py
#
# black "$@":
#   As one command, runs:
#   black one.py two.py
#
# Prefixing a condition with "!" will negate its result.
# These conditions are currently supported:
#   match <regexp>    | The regexp matches $1, the passed path
#   ext <regexp>      | The regexp matches the extension of $1
#   mime <regexp>     | The regexp matches the mime type of $1
#   name <regexp>     | The regexp matches the basename of $1
#   path <regexp>     | The regexp matches the absolute path of $1
#   shebang <regexp>  | The regexp matches the shebang of $1
#   has <program>     | The program is installed (i.e. located in $PATH)
#   env <variable>    | The environment variable "variable" is non-empty
#   terminal          | stdin, stderr and stdout are connected to a terminal
#   else              | Always true
#
# The special command 'ignore' means any files which match the conditions should be ignored
# Any files which don't match any conditions are also classified as 'ignore'

# list some files to explicitly ignore at the top, so we don't corrupt files by mistake
mime ^image|^audio|^video|^font = ignore
# office-like files to ignore
ext pdf|epub|xlsx?|xlt|xlw|gnm|gnumeric|pptx?|od[dfgpst]|docx? = ignore
# compressed files to ignore
ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz|iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip = ignore
# executables
mime application/x-sharedlib|application/x-executable|application/x-pie-executable = ignore
# others
ext desktop|pickle|1|s[wmf]c|kdbx|sqlite = ignore
# lockfiles, e.g Pipfile.lock
ext lock = ignore

# ignore some of my configuration files
match alacritty = ignore
# ignore vim snippet files
ext snippets? = ignore

# html
ext x?html?, has prettier = prettier -w "$@"
# fallback to tidy, in case
ext x?html?, has tidy = tidy -w "$@"

# web technologies, handled by prettier
# for PHP/toml files, must install extensions: npm install -g @prettier/plugin-php prettier-plugin-toml
ext vue|ya?ml|json|graphql|tsx?|jsx?|s?css|less|md|php|toml, has prettier = prettier -w "$@"

# in case files don't end with .json
mime .*json, has prettier = prettier -w "$@"

# dart
ext dart, has dartfmt = dartfmt -w "$@"

# elixir
ext exs?, has mix = mix format "$@"
ext h?eex, has mix = mix format "$@"

# elm
ext elm, has elm-format = elm-format --yes "$@"

# lua
ext lua, has styluac = styluac "$@"
ext lua, has stylua = stylua "$@"
ext lua, has lua-format = lua-format -i "$@"

# golang
ext go, has go = go fmt "$1"

# swift
ext swift, has swift-format = swift-format -m format -i "$@"

# python
ext py, has black = black "$@"
mime text/x-script.python, has black = black "$@"
shebang python(2|3)?, has black = black "$@"
# an alternative, if black is not installed
ext py, has autopep8 = autopep8 -i "$@"
# setup.cfg configuration files
name setup\.cfg, has setup-cfg-fmt = setup-cfg-fmt --include-version-classifiers "$@"

# clojure
mime text/x-clojure, has cljfmt = cljfmt "$@"
ext cljs?, has cljfmt = cljfmt "$@"

# perl
shebang perl, has perltidy = perltidy -b "$@"
mime text/x-perl, has perltidy = perltidy -b "$@"
ext pl, has perltidy = perltidy -b "$@"

# haskell
ext hs, has brittany = brittany --write-mode=inplace "$@"

# kotlin
ext kts?, has ktlint = ktlint --format "$@"

# ruby
shebang ruby, has rubocop = rubocop -a -x "$@"
text/x-ruby, has rubocop = rubocop -a -x "$@"
ext rb, has rubocop = rubocop -a -x "$@"

# rust
ext rs, has rustfmt = rustfmt -- "$@"

# scala
ext scala, has scalafmt = scalafmt "$@"

# shell script
shebang zsh|bash, has shfmt = shfmt -w "$@"
shebang \/bin\/sh, has shfmt = shfmt -w "$@"
ext sh|(ba|z)sh, has shfmt = shfmt -w "$@"
mime text/x-shellscript, has shfmt = shfmt -w "$@"

# ignore .m files which have a 'octave' shebang (https://www.gnu.org/software/octave/)
ext m, shebang octave = ignore
# c/c++/objective-c/java/protobuf
ext h|c|cpp|java|proto|cs|m|mm|M, has clang-format = clang-format -i "$@"
# may match non-c like languages, dont include
#mime text/x-c, has clang-format = clang-format -i "$@"
