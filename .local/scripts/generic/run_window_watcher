#!/usr/bin/env bash
# uses my window watcher fork https://github.com/purarue/aw-watcher-window

ON_OS="${ON_OS:=$(on_machine)}"

declare datadir
datadir="${HOME}/.local/share/window_watcher"

timestamp_filename() {
	printf '%s/%s_%s.csv' "${datadir}" "$(epoch)" "$ON_OS"
}

run_watcher() {
	# dont run on windows
	case "$ON_OS" in
	windows*) exit 1 ;;
	*) ;;
	esac

	set -e
	set -x

	# wait for a bit before starting so X server is ready?
	# not sure if this fixes the issue of it not recognizing the window
	sleep 5
	mkdir -p "$datadir"

	if pgrep -x Hyprland; then
		exec hyprland-active-window -d "$(timestamp_filename)" -i 'Private Browsing'
	else
		exec window_watcher -d "$(timestamp_filename)" -p 3 -i 'Private Browsing'
	fi

}

prunefiles() {
	set -x
	(
		cd "${datadir}" || exit $?
		pwd
		# delete anything in the data dir that is older than 45 days
		find . -type f -mtime +45 -exec mv -v -t ~/.cache/removed {} \;
	)
}

syncfiles() {
	set -x
	rsync -Pavh "${datadir}"/ "$(backup_to window_watcher)"
}

compress() {
	set -x
	(
		cd "$(backup_to window_watcher)" || exit $?
		pwd
		find . -name '*.csv' -mtime +90 -exec gzip --best {} \;
	)

}

case "$1" in
run)
	run_watcher
	;;
tasks)
	syncfiles
	# prunefiles
	# compress
	;;
compress)
	compress
	;;
prune)
	prunefiles
	;;
sync)
	syncfiles
	;;
*)
	run_watcher
	;;
esac
